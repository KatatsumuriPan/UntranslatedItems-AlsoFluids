buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

//version = '1.0'
group = 'kpan.uti_alsofluids'
archivesBaseName = 'UntranslatedItems-AlsoFluids-1.12.2'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "UntranslatedItems-AlsoFluids",
                "Specification-Vendor"    : "Katatsumuri.pan",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "Katatsumuri.pan",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
//*****************Start Basic*****************
//mcmod.info等のversionを解決
def majorVersion = loadProperties("/version.properties").getProperty('majorVersion')
def minorVersion = loadProperties("/version.properties").getProperty('minorVersion')
def patchVersion = loadProperties("/version.properties").getProperty('patchVersion')
version = "${majorVersion}.${minorVersion}.${patchVersion}"
processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version //comment out to always update

    // resourcesの中のmcmod.infoとversion.propertiesが対象(処理後のファイルがjarに格納される)
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include 'version.properties'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': "1.12.2"
    }

    // mcmod.info以外が対象(特に編集せずにそのままコピー)
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
        exclude 'version.properties'
    }
}

def loadProperties(filename) {
    def props = new Properties()
    file(filename).withInputStream {
        props.load(it)
    }
    return props
}
//libs内にjarを入れればそれも使ってコンパイル
//compileは非推奨に、implementationを使う
dependencies {
    implementation fileTree(dir: 'libs', include: '*.jar')
    //implementation fg.deobf("curse.maven:ModNameInCurseForgeModUrl-ProjectId:FileIdInUrl")
}
//template内のソースコードを編集したうえでコピー
//バージョン情報の埋め込み等に
task generateJava(type: Copy) {
    def templateContext = [version: project.version, majorVersion: majorVersion, minorVersion: minorVersion, patchVersion: patchVersion]
    inputs.properties templateContext // for gradle up-to-date check
    from 'src/template/java'
    into "$buildDir/generated/java"
    expand templateContext
}
sourceSets.main.java.srcDir "$buildDir/generated/java" // add the extra source dir
compileJava.dependsOn generateJava // wire the generateJava task into the DAG
//*****************End Basic*****************
//*****************Start Basic Intellij*****************
//Fix resources dir not loaded with Intellij debug.
apply plugin: 'idea'
sourceSets {
    main {
        output.resourcesDir = java.outputDir
    }
}
idea.module.outputDir file("out/production/classes")
//*****************End Basic Intellij*****************
//*****************Start Coremod*****************
jar {
    manifest {
        attributes FMLCorePlugin: 'kpan.uti_alsofluids.asm.core.AsmPlugin'
        attributes FMLCorePluginContainsFMLMod: 'true'
    }
}
//*****************End Coremod*****************
repositories {
    maven {
        url 'https://cursemaven.com'
    }
}
dependencies {
    implementation fg.deobf("curse.maven:untranslated-items-401770:3151260")
    implementation fg.deobf("curse.maven:ae2-extended-life-570458:4673868")
    implementation fg.deobf("curse.maven:gregtech-ce-unofficial-557242:4904269")
    implementation fg.deobf("curse.maven:the-one-probe-245211:2667280")
    runtimeOnly fg.deobf("curse.maven:codechicken-lib-1-8-242818:2779848")
}
