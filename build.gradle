buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

//version = '1.0'
group = 'kpan.uti_alsofluids'
archivesBaseName = 'UntranslatedItems-AlsoFluids-1.12.2'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2860'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "UntranslatedItems-AlsoFluids",
            "Specification-Vendor": "Katatsumuri.pan",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Katatsumuri.pan",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
//*****************Start Basic*****************
//mcmod.infoのversionを解決
version = loadProperties("/src/main/resources/version.properties").getProperty('untranslateditems_alsofluids.version')
processResources {
    // this will ensure that this task is redone when the versions change.
    //inputs.property "version", project.version //comment out to always update

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':"1.12.2"
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}
def loadProperties(filename) {
    def props = new Properties()
    file(filename).withInputStream {
        props.load(it)
    }
    return props
}
//*****************End Basic*****************
//*****************Start Basic Intellij*****************
//Fix resources dir not loaded with Intellij debug.
apply plugin: 'idea'
sourceSets {
    main {
            output.resourcesDir = java.outputDir
        }
}
idea.module.outputDir file("out/production/classes")
//*****************End Basic Intellij*****************
//*****************Start Coremod*****************
jar {
    manifest {
        attributes FMLCorePlugin: 'kpan.uti_alsofluids.asm.core.AsmPlugin'
        attributes FMLCorePluginContainsFMLMod : 'true'
    }
}
//*****************End Coremod*****************
repositories {
    maven {
        url 'https://cursemaven.com'
    }
}
dependencies {
    implementation fg.deobf("curse.maven:untranslated-items-401770:3151260")
    implementation fg.deobf("curse.maven:ae2-extended-life-570458:4673868")
    implementation fg.deobf("curse.maven:gregtech-ce-unofficial-557242:4644635")
    implementation fg.deobf("curse.maven:the-one-probe-245211:2667280")
}
